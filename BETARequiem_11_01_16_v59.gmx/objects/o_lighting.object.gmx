<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creates a surface that is the size of the room

surf = surface_create(room_width, room_height);

surface_set_target(surf);
draw_clear_alpha(c_black, 0);

//Reset to application surface
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (surface_exists(surf)) {
    surface_set_target(surf);
    
    //Sets the dark overlay
    draw_set_color(c_black);
    //Sets the level of darkness (1 for 100%)
    draw_set_alpha(1);
    //            (x1,y1,x2,y2,outline?)
    draw_rectangle(0, 0, room_width, room_height, false);

    //Set Circles, Removes the Darkness (CHERNOBOG)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_boss) {
        with(o_boss){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 200 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_boss) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 150 + random_range(-1, 1), false);

      }
    }
    
    //Set Circles, Removes the Darkness (FIREBALL)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_fireballbolt) {
        with(o_magebolt){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 120 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_fireballbolt) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 70 + random_range(-1, 1), false);

      }
    }
    
    //Set Circles, Removes the Darkness (FIREBALL EXPLOSION)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_fireballexplosion) {
        with(o_magebolt){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 240 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_fireballexplosion) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 140 + random_range(-1, 1), false);

      }
    }
    
    //Set Circles, Removes the Darkness (MINE EXPLOSION)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_mineexplosion) {
        with(o_magebolt){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 90 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_mineexplosion) {
        draw_circle(x + random_range(-1,-1), y + random_range(-1, 1), 60 + random_range(-1, 1), false);

      }
    }
            
    //Set Circles, Removes the Darkness (MAGEBOLTS)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_magebolt) {
        with(o_magebolt){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 60 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_magebolt) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 40 + random_range(-1, 1), false);

      }
    }
    
    //Set Circles, Removes the Darkness (FIREELEMENTAL)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_fireelemental) {
        with(o_fireelemental){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 100 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_fireelemental) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 40 + random_range(-1, 1), false);

      }
    }
    
    //Set Circles, Removes the Darkness (FIREELEMENTAL)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_fireballmagi) {
        with(o_fireballmagi){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 60 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_fireballmagi) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 40 + random_range(-1, 1), false);

      }
    }
    
    //Set Circles, Removes the Darkness (FIREELEMENTAL)
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
     //OUTER
    if instance_exists(o_flamepillar) {
        with(o_flamepillar){
            draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 100 + random_range(-1, 1), false);
            }
        draw_set_color(c_white);
        draw_set_alpha(1);
    //INNER
    with (o_flamepillar) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 60 + random_range(-1, 1), false);

      }
    }
        
    //Set Circles, Removes the Darkness
    draw_set_blend_mode(bm_subtract);
   
     draw_set_color(c_black);
     draw_set_alpha(0.2);
    //Draws the Circles (OUTER CIRCLE)
    if instance_exists(o_player){
    with (o_player) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 160 + random_range(-1, 1), false);

      }
      
      draw_set_color(c_white);
      draw_set_alpha(1);
      //(INNER CIRCLE)
          with (o_player) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 120 + random_range(-1, 1), false);

      }       
   } else {
   
   with (o_youhavedied) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 160 + random_range(-1, 1), false);

      }
      
      draw_set_color(c_white);
      draw_set_alpha(1);
      //(INNER CIRCLE)
          with (o_youhavedied) {
        draw_circle (x + random_range(-1,-1), y + random_range(-1, 1), 120 + random_range(-1, 1), false);

      } 
      }
        
    //Resets all of the set draws
    draw_set_blend_mode(bm_normal);
    draw_set_alpha(1);
    surface_reset_target();
}  else {
    surf = surface_create(room_width,room_height);
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    surface_reset_target();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Destroys surface on room end
if (surface_exists(surf)) {
    surface_free(surf);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the surface

if (!surface_exists(surf)) {
    surf = surface_create(room_width, room_height);
    } else {
    if (view_current == 0)  {
        draw_surface(surf, 0,0);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
