<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Character Stat Selector
/* STATISTIC BREAKDOWN: [Strength, Dexterity, Intelligence, Vitality, Focus]
STR = +3 ATK, +5 HP | Generally scales with 80% cost-efficiency on abilities
DEX = +2 ATK, 3% ATK SPD | Generally scales with 50% cost-efficiency on abilities
INT = +0.2% CDR (MAX 60%) | Generally scales with 130% cost-efficiency on abilities
VIT = +20 HP, +2 HP/5
FOC = +1.5%/1%/0.5% CRIT CHANCE (at under 10, 30, 70 FOC)

ARMOR = For every 1 ARMOR, Damage recieved is reduced by 1.

TOTAL HP = BASE + STR*5 + VIT*20
DAMAGE RECIEVED = DMG - ARMOR

*/
randomize();
display_set_gui_size(1920,1080);
draw_set_font(font_starbound);
draw_set_colour(c_white);
///Create player stats
//Universal Stats
global.lvl = 1;
global.gold = 0;
global.xpscale = 0.2 * global.lvl;
global.xp = 0;
global.cdr = 0;
global.vit = 0;
global.foc = 0;
global.sta = 0;    
global.a_cd = 0;
global.b_cd = 0;
global.c_cd = 0;                             // &lt;+10&gt;       &lt;+30&gt;       &lt;+50&gt;       &lt;+70&gt; etc.
global.xpmax = 90 + global.lvl * 50 * global.xpscale; //Lvl 1 = +10 xp, 2 = +40 xp, 3 = +90 xp

global.basearmor = 0;
//Weapon Stats
global.wepstr = 0;
global.wepdex = 0;
global.wepint = 0;
//Helm Stats
global.helmstr = 0;
global.helmdex = 0;
global.helmint = 0;
//Chestplate Stats
global.cheststr = 0;
global.chestdex = 0;
global.chestint = 0;
//Boots Stats
global.bootstr = 0;
global.bootdex = 0;
global.bootint = 0;



//Independant Stats
switch (o_characterselect.characterselect) {
    //Elron
    case 1:
        global.atkbase = 20;
        global.basestr = 10;
        global.basedex = 10;
        global.baseint = 10;
        
        
        global.basehp = 50 + global.basestr*5 + global.vit*20;
        global.spd = 1.35;
        //Cooldowns
        global.maxa_cd = 360 - 360 * global.cdr; //6.00 seconds
        global.maxb_cd = 480 - 480 * global.cdr; //8.00 seconds
        global.maxult_charge = 900 + 100 * global.lvl;
        global.spd = 1.35;
        break;
    //Quin
    case 2:
        global.atkbase = 25;
        global.basestr = 14;
        global.basedex = 8;
        global.baseint = 6;
        
        global.basehp = 50 + global.basestr*5
        break;
        
        
        }
//Universal Stats applied after

global.str = global.basestr + global.wepstr + global.helmstr + global.cheststr + global.bootstr;
global.dex = global.basedex + global.wepdex + global.helmdex + global.chestdex + global.bootdex;
global.int = global.baseint + global.wepint + global.helmint + global.chestint + global.bootint;
global.armor = global.basearmor;
global.atk = global.atkbase + global.basestr * 3 + global.basedex * 2;
global.atkspd = 1.00 ; //100% speed on attack frames
global.hp = global.basehp;
global.crit = global.foc*0.015 + 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update stats based on items
global.str = global.basestr + global.wepstr + global.helmstr + global.cheststr + global.bootstr;
global.dex = global.basedex + global.wepdex + global.helmdex + global.chestdex + global.bootdex;
global.int = global.baseint + global.wepint + global.helmint + global.chestint + global.bootint;
scr_weapon();
scr_helm();
scr_chest();
scr_boot();
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_get_input();
if instance_exists(o_mysterynpc) {   
   mysterynpcdis = point_distance(o_player.x,o_player.y,global.mysterynpc.x,global.mysterynpc.y);
    }
if (interact_key) &amp;&amp; mysterynpcdis &lt; 30{
    if global.mysterynpc.x &lt; o_player.x
        image_xscale = -1;
    if global.mysterynpc.x &gt; o_player.x
        image_xscale = 1;
    scr_dialog_activate(global.mysterynpc);   
}
 /*---NOTE This isnt the most efficient way of doing it ---
 There are no tutorials on how to make it the way you want it to be, all of them are done using arrays
 so i just made this one for the monday thing since it works. I think I know how to create one the way
 you want to but would take to long to create for the monday release. just bear with this one for now Senpai
 
 
 */
 /* to set up another npc 
 Things you need: dialogfolder objects
                  scr_dialogactivate();
                  spr_dialog  
 1.create the npc object as a parent to o_speaker 
 2. edit create event text such as in obj_jeff
 3. draw the npc object in the creation code
 4.add to the player stats 
    if instance_exists(npc_object) {   
   npcdis = point_distance(o_player.x,o_player.y,global.jeff.x,global.jeff.y);
    }
if (dialog_key) &amp;&amp; jeffdis &lt; 30{
    scr_dialog_activate(global.jeff);   
}     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(o_enemyhost)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
